# Makefile.common file for root and ROBAST based codes

#------------------------------------------------------------
#  set ROOT environmental variables from root's Makefile.arch, need to find it first
# older version
MAKEARCH	:=	$(shell find -L $(ROOTSYS)/test -name Makefile.arch 2> /dev/null)

ifeq ($(MAKEARCH), )
# 41594 or later
MAKEARCH	:=	$(shell find -L $(ROOTSYS)/etc -name Makefile.arch)
endif

ifeq ($(MAKEARCH), )
RC := root-config
MAKEARCH	:=	$(wildcard $(shell $(RC) --etcdir)/Makefile.arch)
endif

#  and get root variables
include $(MAKEARCH)
# MAKEARCH generates the following variables and flags (partial list)
# CXX, LD
#CXXFLAGS     += $(ROOTCFLAGS)
#LDFLAGS      += $(ROOTLDFLAGS)
#LIBS          = $(ROOTLIBS) $(SYSLIBS)
#GLIBS         = $(ROOTGLIBS) $(SYSLIBS)
#ObjSuf        = o
#SrcSuf        = cxx
#ExeSuf        =
#DllSuf        = so
#OutPutOpt     = -o # keep whitespace after "-o"
#OPT
#OPT2
#---------------------------------------------------------------

#   add additional root libraries.
LIBS += -lMinuit -lTreePlayer -lGenVector  
LIBS += -lGeomBuilder  -lGeomPainter  -lGeom -lGed

#----------------------------------------------------------------
#  is cling available, if so use rootcling to produce root dictionaries
ifeq ($(ROOTCLING),)
ROOTCLING	:=	$(ROOTCINT)
else
ROOTCLING_FOUND	:= 1
endif
#------------------------------------------------------

ROBAST_VER_NUM := 2.4.1
ROBAST_DIR := ROBAST-$(ROBAST_VER_NUM)/
ROBAST_VER := ROBAST-$(ROBAST_VER_NUM)
ROBAST_TGZ := ROBAST-$(ROBAST_VER_NUM).tar.gz
ROBAST_BASE_URL := https://codeload.github.com/ROBAST/ROBAST/tar.gz
ROBAST_URL := $(ROBAST_BASE_URL)/v$(ROBAST_VER_NUM)
ROOTMAP := $(ROBAST_VER)/libROBAST.rootmap

INCLUDEFLAGS  += -I$(ROBAST_VER)/include
LDFLAGS       += -L$(ROBAST_VER)
LIBS          += -lROBAST

ARCH1 :=$(shell uname)
ifeq ($(ARCH1),Linux)
# passes option "-rpath v1.2.0" to the linker to set the
# run path (which hasn't been set in LD_LIBRARY_PATH)
LDFLAGS += -Xlinker -rpath -Xlinker $(ROBAST_VER)
endif
